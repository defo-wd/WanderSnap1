<style>
  body {
    font-family: 'Brush Script MT', cursive;
  }
  .container-fluid, .row {
    margin: 0;
    padding: 0;
  }
</style>

<div class="container-fluid">
  <div class="row">
    <div class="col-md-6 bg-light">
      <!-- Sidebar -->
      <div class="row">
        <div class="col-md-12">
          <%= render 'layouts/sidebar' %>
        </div>
      </div>
      <!-- サイドバーに連動させるコンテンツ -->
      <div class="row">
        <div class="col-md-12">
          <div class="content-area">
            <%= render 'layouts/profile_section' %>
            <%= render 'layouts/spot_section' %>
            <%= render 'layouts/post_section' %>
            <%= render 'layouts/likes_section' %>
            <%= render 'layouts/follow_section' %>
          </div>
        </div>
      </div>
    </div>

    <!-- Google Map-->
    <div class="col-md-6 p-0">
      <div id="map" style="height: 100vh; width: 100%;"></div>
    </div>
  </div>
</div>


<script>
  let map;
  let previousMarker = null;  // ここで previousMarker を初期化

  function initMap(){
    geocoder = new google.maps.Geocoder()

    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition((position) => {
        const pos = {
          lat: position.coords.latitude,
          lng: position.coords.longitude,
        };

        // Google Mapの初期化
        map = new google.maps.Map(document.getElementById('map'), {
          center: pos,
          zoom: 12,
        });
        setup_map_click(map)
        // 現在の位置にマーカーを設定
        new google.maps.Marker({
          position: pos,
          map: map,
          title: "現在位置",
        });

        // MapとPostデータから各ポストの情報と位置を取得してマーカーを設定
        <% @maps.each do |m| %>
          <% m.post_maps.each do |post_map| %>
            <% post = post_map.post %>
             (function(){
         // ポストの詳細を表示するためのHTMLコンテンツを作成
              var contentString = `
                <ul class="list-group">
                  <li class="list-group-item">
                    <a href="/posts/<%= post.id %>">
                      <img src="<%= post.snap.url %>" alt="<%= post.body %>" style="width: 50px; height: 50px;">
                    </a>
                   <div>
                      <strong><%= post.body %></strong>
                      <p>Likes: 10 | Comments: 5</p> <!-- ここはダミーデータなので後で修正が必要です -->
                    </div>
                  </li>
                </ul>
              `;

      // インフォウィンドウの作成
      var infowindow = new google.maps.InfoWindow({
        content: contentString,
      });

      // マーカーの作成と地図への追加
      var marker = new google.maps.Marker({
        position:{lat: <%= m.latitude %>, lng: <%= m.longitude %>},
        map: map,
        title: "<%= m.spot_name %>",
      });

      // マーカークリック時のイベントハンドラを設定（インフォウィンドウを開く）
      marker.addListener('click', function() {
        infowindow.open(map, marker);
      });
    })();
        <% end %>
        <% end %>

      });
    } else {
      // Geolocationがサポートされていない場合、デフォルトの位置に地図を表示
      map = new google.maps.Map(document.getElementById('map'), {
        center: {lat: 35.68123620000001, lng: 139.7671248},
        zoom: 12,
      });
      setup_map_click(map)
    }

  }
  function setup_map_click(map){
     // クリックイベントリスナーを追加
          map.addListener('click', function(event) {
    // クリックした位置の座標を取得
          const clickPos = {
            lat: event.latLng.lat(),
            lng: event.latLng.lng(),
          };

    // 前のマーカーがあれば削除する
          if (previousMarker) {
            previousMarker.setMap(null);
          }

    // その位置に新しいマーカーを立てる
          previousMarker = new google.maps.Marker({
          position: clickPos,
          map: map,
        });

    // マップのセンターをクリックした位置に設定
        map.setCenter(clickPos);
      });


  }
</script>


<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_API_KEY'] %>&callback=initMap" async defer></script>

<!--sサイドバー-->

<script>
  document.querySelectorAll('.nav-link').forEach((link) => {
    link.addEventListener('click', (e) => {
      e.preventDefault();
      document.querySelectorAll('.content-section').forEach((section) => {
        section.classList.add('d-none');
      });
      document.querySelector(`#${e.target.getAttribute('data-content')}`).classList.remove('d-none');
    });
  });
</script>

<!--Listからセンター合わせ-->

<script>
  function centerMap(latitude, longitude) {
  const center = new google.maps.LatLng(latitude, longitude);
  map.setCenter(center);
}
</script>

